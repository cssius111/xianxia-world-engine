--- a/templates_enhanced/game_enhanced_optimized.html
+++ b/templates_enhanced/game_main.html
@@ -1,167 +1,33 @@
 <!DOCTYPE html>
 <html lang="zh-CN">
 <head>
     <meta charset="UTF-8">
     <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
     <title>修仙世界引擎</title>
     <!-- 外部CSS文件 -->
     <link rel="stylesheet" href="{{ url_for('static', filename='css/game.css') }}">
 </head>
 <body>
     <!-- 顶部区域 -->
-    <div class="header">
-        <h1>修仙世界引擎</h1>
-        <span style="font-size: 12px; color: #666; letter-spacing: 2px;">——沉浸式文字修真模拟——</span>
-        <div class="dragon-seal"></div>
-    </div>
+    {% include 'components/header.html' %}
 
     <!-- 主体容器 -->
     <div class="main-container">
         <!-- 左侧状态栏 -->
-        <div class="sidebar">
-            <h2>角色状态</h2>
-
-            <div class="status-block">
-                <!-- ... 状态显示内容 ... -->
-            </div>
-
-            <!-- ... 其他状态块 ... -->
-        </div>
+        {% include 'components/sidebar.html' %}
 
         <!-- 中央叙事区域 -->
-        <div class="narrative-log" id="narrative-log">
-            <div class="loading" id="loading">
-                <div class="loading-spinner"></div>
-                <div style="margin-top: 10px;">正在唤醒修仙世界...</div>
-            </div>
-        </div>
+        {% include 'components/narrative_log.html' %}
     </div>
 
     <!-- 底部指令区 -->
-    <div class="command-section">
-        <div class="input-hint">💡 输入"帮助"查看全部可用命令，按Tab键显示命令提示</div>
-        <div class="input-line">
-            <input type="text" 
-                   class="command-input" 
-                   id="command-input" 
-                   placeholder="输入命令，如：探索、攻击妖兽、使用回元丹……" 
-                   onkeydown="handleKeyDown(event)"
-                   onkeyup="handleKeyUp(event)"
-                   autocomplete="off">
-            <button class="command-submit" onclick="executeCommand()" title="发送指令并刷新界面">执行</button>
-        </div>
-        <!-- 自动完成提示 -->
-        <div class="autocomplete" id="autocomplete"></div>
-    </div>
+    {% include 'components/command_input.html' %}
 
     <!-- 浮动提示 -->
     <div class="tooltip" id="tooltip"></div>
 
     <!-- 外部JS文件 -->
     <script src="{{ url_for('static', filename='js/game.js') }}"></script>
-    <!-- 命令处理函数绑定 -->
-    <script>
-        // 全局函数绑定（为了兼容onclick）
-        const sendCommand = GameUI.sendCommand;
-    </script>
 </body>
 </html>

## 新建组件文件说明

以下组件文件需要创建在 `templates_enhanced/components/` 目录下：

1. **header.html** - 顶部标题组件
2. **sidebar.html** - 左侧状态栏组件（包含角色状态、位置信息、功能导航等）
3. **narrative_log.html** - 中央日志显示区域组件
4. **command_input.html** - 底部命令输入组件

这种拆分使得每个组件都可以独立维护和修改，提高了代码的可维护性。
